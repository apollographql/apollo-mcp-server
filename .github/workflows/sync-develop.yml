name: Sync main → develop

on:
  pull_request:
    types: [closed]
    branches: [main]

permissions:
  contents: write
  pull-requests: write
  issues: write

concurrency:
  group: sync-main-into-develop
  cancel-in-progress: false

jobs:
  open-sync-pr:
    if: |
      github.actor != 'github-actions[bot]' && (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Generate branch name from PR# when available, otherwise use first 7 commit SHA characters
      - name: Compute branch/name metadata
        id: meta
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "branch=sync/main-into-develop-pr-${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT
            echo "title=Sync main → develop (PR #${{ github.event.pull_request.number }})" >> $GITHUB_OUTPUT
            echo "body=Auto-opened after merging \`${{ github.event.pull_request.head.ref }}\` into \`main\`." >> $GITHUB_OUTPUT
          else
            shortsha=${GITHUB_SHA::7}
            echo "branch=sync/main-into-develop-${shortsha}" >> $GITHUB_OUTPUT
            echo "title=Sync main → develop (${shortsha})" >> $GITHUB_OUTPUT
            echo "body=Auto-opened after push to \`main\` at \`${GITHUB_SHA}\`." >> $GITHUB_OUTPUT
          fi

      # Short-lived sync branch from develop and merge main into it (do NOT rebase)
      # use +e to stop errors from short-circuiting the script
      - name: Prepare sync branch
        id: prep
        run: |
          git fetch origin develop main
          git switch -c "${{ steps.meta.outputs.branch }}" origin/develop
          set +e
          git merge --no-ff origin/main
          rc=$?
          set -e
          git add -A || true
          git commit -m "WIP: merge main into develop via ${{ steps.meta.outputs.branch }}" || true
          git push origin HEAD
          echo "merge_status=$rc" >> "$GITHUB_OUTPUT"

      # Open the PR targeting develop
      - name: Open PR to develop
        id: syncpr
        uses: peter-evans/create-pull-request@v6
        with:
          branch: ${{ steps.meta.outputs.branch }}
          base: develop
          title: ${{ steps.meta.outputs.title }}
          body:  |
            ${{ steps.meta.outputs.body }}

            Merge status: ${{ steps.prep.outputs.merge_status == '0' && 'clean ✅' || 'conflicts ❗' }}
          labels: ${{ steps.prep.outputs.merge_status != '0' && 'back-merge,automation,conflicts' || 'back-merge,automation' }}

      # Comment back on the ORIGINAL merged PR with a link to the sync PR
      - name: Comment on source PR with sync PR link
        if: github.event_name == 'pull_request' && steps.syncpr.outputs.pull-request-number != ''
        uses: actions/github-script@v7
        with:
          script: |
            const sourcePrNumber = context.payload.pull_request.number;
            const syncUrl = `${{ toJson(steps.syncpr.outputs['pull-request-url']) }}`.replace(/^"|"$/g, '');
            const body = `Opened sync PR to merge **main → develop**: ${syncUrl}`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: sourcePrNumber,
              body,
            });

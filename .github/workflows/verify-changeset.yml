name: Verify Changeset
on:
  push:
    # don't run on tags, run on commits
    # https://github.com/orgs/community/discussions/25615
    tags-ignore:
      - "**"
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  verify-changeset:
    name: Verify Changeset
    runs-on: ubuntu-24.04
    permissions:
      pull-requests: write
      contents: read
    steps:
      - uses: actions/github-script@v7
        id: filter
        env:
          IGNORE_DIRS: ".github/workflows/,.cargo/,.direnv/,.vscode/"
        with:
          script: |
            const pr = context.payload.pull_request;
            const files = await github.paginate(
              github.rest.pulls.listFiles,
              { owner: context.repo.owner, repo: context.repo.repo, pull_number: pr.number, per_page: 100 }
            );
            
            const ignore = process.env.IGNORE_DIRS.split(',').map(s => s.trim()).filter(Boolean);
            
            const onlyIgnored = files.length > 0 && files.every(f =>
              ignore.some(prefix => f.filename.startsWith(prefix))
            );
            
            core.info(`Changed files:\n${files.map(f => `${f.status}\t${f.filename}`).join('\n')}`);
            core.setOutput('enforce', onlyIgnored ? 'false' : 'true');
            
            if (onlyIgnored) {
              core.notice(`Skipping enforcement: all changes are in ignored paths: ${ignore.join(', ')}`);
            }
      - name: Verify changeset included
        uses: actions/github-script@v7
        if: steps.filter.outputs.enforce == 'true'
        with:
          script: |
            const dir = '.changesets/';
            const pr = context.payload.pull_request;
            const files = await github.paginate(
              github.rest.pulls.listFiles,
              { owner: context.repo.owner, repo: context.repo.repo, pull_number: pr.number, per_page: 100 }
            );
            const ok = files.some(f =>
              f.filename.startsWith(dir) &&
              ['added','modified','renamed'].includes(f.status)
            );
            if (!ok) {
              core.setFailed(`No changeset added to ${dir}.`);
            } else {
              core.info(`Changeset found under ${dir}.`);
            }
            core.setOutput('ok', ok ? 'true' : 'false');
      - name: Add changeset missing comment on failure
        uses: actions/github-script@v7
        if: failure()
        with:
          script: |
            const pr = context.payload.pull_request;
            await github.rest.issues.createComment({
             owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              body: [
                "‚ùå **Changeset file missing for PR**",
                "",
                "All changes should include an associated changeset file.",
                "Please refer to [README](https://github.com/apollographql/apollo-mcp-server/blob/main/.changesets/README.md) for more information on generating changesets."
              ].join("\n")
            });